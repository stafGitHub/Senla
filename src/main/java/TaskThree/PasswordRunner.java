package TaskThree;

import TaskThree.Logic.CheckYouPassword;
import TaskThree.Logic.GeneratePassword;
import TaskThree.Util.ParseMap;
import TaskTwo.Logick.Converter;

import java.util.Scanner;

public class PasswordRunner {
    public static void main(String[] args) {
        ParseMap.initMap(ParseMap.getProperties("src/main/resources/TaskThree/password.properties"));
        GeneratePassword.init();

        Scanner scanner = new Scanner(System.in);
        System.out.println("""
                |-----------------------------------
                |    Password                      |
                |                   Generator      |
                -----------------------------------|

                /exit - –≤—ã—Ö–æ–¥ , –≤—ã–≤–µ–¥–µ—Ç—Å—è –¥–æ–ø–∞–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                """);


        while (true) {
            System.out.println("\u001B[37m"+"–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è");
            String input = scanner.nextLine();

            if (input.equals("/exit")) {
                break;
            }
            while (true) {
                StringBuilder stringBuilder = new StringBuilder();

                try {
                    String iterator = (Integer.parseInt(input)>=8&&Integer.parseInt(input)<=12)?input:"Error!";

                    for (int i = 0; i < Integer.parseInt(iterator); i++) {
                        stringBuilder.append(GeneratePassword.generateSymbol());
                    }
                }catch (Exception e){
                    System.out.println("\u001B[31m"+"–ú–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ 8<=12");
                    break;
                }

                if (CheckYouPassword.check(stringBuilder.toString())) {
                    System.out.println("\u001B[32m" +stringBuilder +"\u001B[37m"+" ---> password üîè \n");
                    break;
                }
            }

        }

        System.out.println(CheckYouPassword.error + " –æ—à–∏–±–æ–∫");
        System.out.println("""
                –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—è—Ö
                –ú–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ —Ç–∞–∫–æ–µ , —á—Ç–æ –ø–∞—Ä–æ–ª—å –Ω–µ –±—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
                –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø–∞—Ä–æ–ª—å —Å–æ–∑–¥–∞—ë—Ç—Å—è –∑–∞–Ω–æ–≤–æ
                
                –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏ –¥–ª—è –ø–∞—Ä–æ–ª—è –∏–∑ 8 —Å–∏–º–≤–æ–ª–æ–≤ - 0,00036%
                –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏ –¥–ª—è –ø–∞—Ä–æ–ª—è –∏–∑ 12 —Å–∏–º–≤–æ–ª–æ–≤ - 0,00006%
                –î–∞–Ω–Ω—ã–µ –≤–∑—è—Ç—ã –∑–∞ 5000 –∏—Ç–µ—Ä–∞—Ü–∏–π
                """);

    }

}
